b'commit
b70d55de01163f66355e51e7bd306a19d05ccd30\nAuthor:
terry
<terry9026955@gmail.com>\nDate:


Fri
Jul
22
15:43:22
2022
+0800\n\n



\xe4\xbf\xae\xe5\x88\xb0\xe5\x87\xbaBUG\xe7\x89\x88\n\ndiff
--git
a/project_intel_smoke_test/test_plan_ui_origin.py
b/project_intel_smoke_test/test_plan_ui_origin.py\nindex
4f47d60..7f3fa56
100644\n---
a/project_intel_smoke_test/test_plan_ui_origin.py\n+++
b/project_intel_smoke_test/test_plan_ui_origin.py\n@@
-13,12
+13,15
@@
import
logging\n
import
time\n
from
functools
import
partial\n
\n+#
Default
branch:
Echoharbor_N38A_Main\n
\n
\n+#
Counter
for
recursion
times
recording
and
restarting
program\n+counter
=
0\n
\n
\n
class
Main(QMainWindow,
ui.Ui_MainWindow):\n-



SHA
=
None\n+



SHA
=
None

#
\xe5\x85\xa8\xe5\x9f\x9f\n




stopmissionFlag
=
False\n




version_number
=
"20220718A_BETA"\n




#
determine
if
application
is
a
script
file
or
frozen
exe\n@@
-59,6
+62,8
@@
class
Main(QMainWindow,
ui.Ui_MainWindow):\n








ini
=
self.loadini()\n








folderPath
=
ini.value("Folder/path")\n








gitPath
=
ini.value("Git_path/path")\n+







print("getInfo
called!")
#
TEST\n+







print("gitPath:
"
,
gitPath)\n








\n








#
get
number
of
list
\n








listNumber
=
self.listWidget.count()\n@@
-74,15
+79,16
@@
class
Main(QMainWindow,
ui.Ui_MainWindow):\n








\n




\n




def
threadRunSHA(self,
folderpath,
listWidget_count,
scriptList,
branch,
gitPath):\n-







\n-







self.thread
=
QThread(parent=self)\n+







print("threadRunSHA
called!")\n+







print("now
the
branch
is
"
+
branch)\n+







self.thread
=
QThread(parent=self)

#
\xe9\x96\x8b\xe6\x96\xb0Thread\n








\n








self.worker
=
getSHA()\n








#
Move
worker
to
the
thread\n








self.worker.moveToThread(self.thread)\n








#
Connect
signals
and
slots\n








\n-







self.thread.started.connect(partial(self.worker.main,
gitPath,
branch))\n+







self.thread.started.connect(partial(self.worker.main,
gitPath,
branch))
#
\xe8\xbf\xb4\xe5\x9c\x88\xe8\xb7\xb3\xe4\xbe\x86\xe6\x9c\x83\xe9\x87\x8d\xe6\x96\xb0\xe9\x96\x8b\xe4\xb8\x80\xe5\x80\x8b\xe6\x96\xb0Thread\xe5\x81\x9aThread2\xe7\x9a\x84\xe4\xba\x8b\xe6\x83\x85\n
\n








#
\xe7\x95\xb6\xe6\x94\xb6\xe5\x88\xb0finished,
\xe7\xb7\x9a\xe7\xa8\x8b\xe7\xb5\x90\xe6\x9d\x9f\n








self.worker.finished.connect(self.thread.quit)\n@@
-579,7
+585,7
@@
class
getSHA(QThread):\n












return
False\n








else:\n












print("\xe3\x80\x90Remote\xe3\x80\x91
and
\xe3\x80\x90Loacal\xe3\x80\x91
are
\\\'different\\\'
branch.")\n-











self.gitPull()\n+











#self.gitPull()\n
\n








#
return
SHA\n








self.writeSHA(real_time,
remoteSHA,
localSHA)\n@@
-620,6
+626,7
@@
class
getSHA(QThread):\n
\n
\n




def
gotoPath(self,
gitPath):\n+







print("now
in
the
gotoPath
of
getSHA")\n








os.chdir(gitPath)\n








#
os.chdir(\'D:/SourceCode_SM2269\')\n








cwd
=
os.getcwd()
\n@@
-636,24
+643,46
@@
class
getSHA(QThread):\n












for
line
in
logInfo:\n
















file.write(line)\n
















file.write("\\n")\n+







\n+







#
\xe6\x8a\x93\xe5\x87\xba\xe9\x97\x9c\xe9\x8d\xb5\xe5\xad\x97\n








with
open("log.txt",
"r")
as
read:\n-











readfile
=
read.readlines()[19]\n+











for
line
in
logInfo:\n+















if
"Author"
in
line:\n+



















name
=
line.split("
")

#
\xe5\x88\x87\xe6\x88\x90List\n+



















fullname
=
str(name[1])\n+



















if
"<"
not
in
name[2]:\n+























fullname
=
name[1]
+
name[2]\n+



















print("Author:
",
fullname)\n+



















\n












\n-







print("Author:
"
+
readfile)\n+











#readfile
=
read.readlines()[19]\n+











\n+







#print("Author:
"
+
readfile)\n








\n








return
True\n








\n








\n




def
main(self,
gitPath,
branch):\n








try:\n+











#counter
for
recording
revursion\n+











if
counter
>=
1000:\n+















#\xe9\x87\x8d\xe9\x96\x8b\xe6\xa9\x9f\n+















#restart()


#
\xe9\x87\x8d\xe5\x95\x9f?!?!\n+















pass\n+











else:\n+















counter
+=
1
\n+











\n












real_time
=
time.strftime("%Y%m%d_%H%M%S",
time.localtime())\n












#
Go
to
directory
(git
repository)\n+











print("calling
gotoPath...")\n+











print("gitPath:",
gitPath)\n












self.gotoPath(gitPath)\n+











print("After
gotoPath
calling...")\n












#
showFile()\n












#
gitCheck()\n
\n












#
Get
SHA\n-











compareTigger
=
self.checkBranch(real_time,
branch)\n+











compareTigger
=
self.checkBranch(real_time,
branch)
#
\xe6\xb3\xa8\xe6\x84\x8f\xe7\x89\x88\xe6\x9c\xac\xe8\xa6\x81\xe6\x89\x93\xe5\xb0\x8d(\xe5\x9c\xa8ini\xe8\xa3\xa1\xe9\x9d\xa2\xe6\x94\xb9\xe5\x8d\xb3\xe5\x8f\xaf)\n












\n












if
compareTigger
==
True:\n
















tiggerList
=
self.gitLog()\n@@
-738,8
+767,9
@@
class
runBatchcommand(QThread):\n
\n
































procress
=
subprocess.run([file_path,
branch_input,
SHA_input])\n
\n-































#
if
self.checkBox.isChecked():\n-































#




command
=
use_inbox_delete_smi_driver_tp.main()\n+































if
self.checkBox.isChecked():\n+



































\n+



































command
=
use_inbox_delete_smi_driver_tp.main()\n




































\n
\n




























elif
"Restart"
in
file_path
or
"restart"
in
file_path:\n@@
-793,6
+823,9
@@
class
runBatchcommand(QThread):\n
\n








\n
if
__name__
==
\'__main__\':\n+



#
\xe9\x98\xb2\xe6\xad\xa2\xe7\xa8\x8b\xe5\xbc\x8f\xe6\x95\xb4\xe5\x80\x8b\xe5\xb4\xa9\xe6\xbd\xb0\xe6\x8e\x89\n+



sys.setrecursionlimit(100000)

\n+



\n




app
=
QtWidgets.QApplication(sys.argv)\n




window
=
Main()\n




window.show()\n'
